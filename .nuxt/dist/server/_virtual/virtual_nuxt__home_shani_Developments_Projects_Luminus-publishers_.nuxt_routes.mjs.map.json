{"file":"virtual_nuxt__home_shani_Developments_Projects_Luminus-publishers_.nuxt_routes.mjs","mappings":"AAyBgB,SAAA,gBAAgB,SAAS,iBAAiB;AAM1D;AAEA,MAAe,UAAA;AAAA,EACb;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,WAAW,MAAM,OAAO,wBAAsE;AAAA,EAAA;AAElG;","names":[],"sources":["../../../../virtual:nuxt:%2Fhome%2Fshani%2FDevelopments%2FProjects%2FLuminus-publishers%2F.nuxt%2Froutes.mjs"],"sourcesContent":["\nif (import.meta.hot) {\n  import.meta.hot.accept((mod) => {\n    const router = import.meta.hot.data.router\n    const generateRoutes = import.meta.hot.data.generateRoutes\n    if (!router || !generateRoutes) {\n      import.meta.hot.invalidate('[nuxt] Cannot replace routes because there is no active router. Reloading.')\n      return\n    }\n    router.clearRoutes()\n    const routes = generateRoutes(mod.default || mod)\n    function addRoutes (routes) {\n      for (const route of routes) {\n        router.addRoute(route)\n      }\n      router.replace(router.currentRoute.value.fullPath)\n    }\n    if (routes && 'then' in routes) {\n      routes.then(addRoutes)\n    } else {\n      addRoutes(routes)\n    }\n  })\n}\n\nexport function handleHotUpdate(_router, _generateRoutes) {\n  if (import.meta.hot) {\n    import.meta.hot.data ||= {}\n    import.meta.hot.data.router = _router\n    import.meta.hot.data.generateRoutes = _generateRoutes\n  }\n}\nimport { default as indexHcnHM7LugRroXg3wXM1NN_45dG0pInJ8wrGXps0LQ69ZQMeta } from \"/home/shani/Developments/Projects/Luminus-publishers/pages/index.vue?macro=true\";\nexport default [\n  {\n    name: \"index\",\n    path: \"/\",\n    component: () => import(\"/home/shani/Developments/Projects/Luminus-publishers/pages/index.vue\")\n  }\n]"],"version":3}